/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.csme.csmeapi.api;

import java.util.Optional;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.csme.csmeapi.mobile.model.IssuanceOfBankGuaranteeRq;
import com.csme.csmeapi.mobile.model.IssuanceOfBankGuaranteeRs;
import com.fasterxml.jackson.databind.ObjectMapper;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiResponses;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2025-01-29T10:46:11.400+04:00[Asia/Muscat]")
@Api(value = "RequestLG", description = "the RequestLG API")
public interface RequestLGApi {

    Logger log = LoggerFactory.getLogger(RequestLGApi.class);

    Optional<ObjectMapper> getObjectMapper();

    Optional<HttpServletRequest> getRequest();

    @ApiOperation(
        value = "Request Letter of Guarantee",
        nickname = "requestBG",
        notes = "Submit a request for issuance of a Letter of Guarantee.",
        response = IssuanceOfBankGuaranteeRs.class,
        tags = { "RequestLG API" }
    )
    @ApiResponses(value = {
        @ApiResponse(code = 200, message = "OK", response = IssuanceOfBankGuaranteeRs.class),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 500, message = "Internal Server Error")
    })
    @RequestMapping(
        value = "/RequestLG",
        produces = { "application/json" },
        consumes = { "application/json" },
        method = RequestMethod.POST
    )
    ResponseEntity<IssuanceOfBankGuaranteeRs> requestBG(
        @ApiParam(value = "Request Id", required = true)
        @RequestHeader(value = "requestId", required = true) UUID requestId,

        @ApiParam(value = "Channel Name", required = true, defaultValue = "MobileBanking")
        @RequestHeader(value = "channel", required = true) String channel,

        @ApiParam(value = "Time date Unix Format", required = true)
        @RequestHeader(value = "timeStamp", required = true) Integer timeStamp,

        @ApiParam(value = "Company Id", required = true)
        @RequestHeader(value = "CIC", required = true) String CIC,

        @ApiParam(value = "User Id", required = true)
        @RequestHeader(value = "UserId", required = true) String userId,

        @NotNull
        @ApiParam(value = "Module Code", required = true, allowableValues = "OWGT")
        @Valid @RequestParam(value = "Module", required = true) String module,

        @ApiParam(value = "Request payload body")
        @Valid @RequestBody IssuanceOfBankGuaranteeRq body,

        @ApiParam(value = "Authorization Token (optional)")
        @RequestHeader(value = "authToken", required = false) String authToken,

        @ApiParam(value = "Version of API", defaultValue = "1.0.0")
        @RequestHeader(value = "version", required = false) String version,

        @ApiParam(value = "Function Type")
        @Valid @RequestParam(value = "FuncType", required = false) String funcType
    );
}
