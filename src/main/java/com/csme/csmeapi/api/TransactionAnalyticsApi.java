/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.4.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.csme.csmeapi.api;

import com.csme.csmeapi.fin.models.XTransactionAnalyticsRequest;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2025-07-23T10:00:00.000000+04:00[Asia/Dubai]")
@Validated
@Tag(name = "TransactionAnalytics", description = "the TransactionAnalytics API")
public interface TransactionAnalyticsApi {

    /**
     * POST /TransactionAnalytics : Get Transaction Analytics
     * Get detailed transaction analytics for a specific module and time period
     *
     * @param requestId Request Id (UUID format) (required)
     * @param secertKey Secret Key (optional)
     * @param channel Channel Name (required)
     * @param timeStamp Time date Unix Format (required)
     * @param entity Entity (required)
     * @param transactionAnalytics  (required)
     * @param request 
     * @return OK (status code 200)
     *         or Created (status code 201)
     *         or Unauthorized (status code 401)
     *         or Forbidden (status code 403)
     *         or Not Found (status code 404)
     */
    @Operation(
        operationId = "getTransactionAnalytics",
        summary = "Get Transaction Analytics",
        description = "Get detailed transaction analytics for a specific module and time period",
        tags = { "TransactionAnalytics" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = Object.class))
            }),
            @ApiResponse(responseCode = "201", description = "Created"),
            @ApiResponse(responseCode = "401", description = "Unauthorized"),
            @ApiResponse(responseCode = "403", description = "Forbidden"),
            @ApiResponse(responseCode = "404", description = "Not Found")
        },
        security = {
            @SecurityRequirement(name = "jwt")
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/TransactionAnalytics",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<Object> getTransactionAnalytics(
        @Parameter(name = "requestId", description = "Request Id (UUID format)", required = true) @RequestHeader(value = "requestId", required = true) String requestId,
        @Parameter(name = "SecertKey", description = "Secret Key") @RequestHeader(value = "SecertKey", required = false) String secertKey,
        @Parameter(name = "channel", description = "Channel Name", required = true) @RequestHeader(value = "channel", required = true) String channel,
        @Parameter(name = "timeStamp", description = "Time date Unix Format", required = true) @RequestHeader(value = "timeStamp", required = true) String timeStamp,
        @Parameter(name = "entity", description = "Entity", required = true) @RequestHeader(value = "entity", required = true) String entity,
        @Parameter(name = "TransactionAnalytics", description = "") @Valid @RequestBody XTransactionAnalyticsRequest transactionAnalytics,
        HttpServletRequest request
    );
}