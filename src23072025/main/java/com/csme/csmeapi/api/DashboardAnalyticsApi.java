/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package com.csme.csmeapi.api;

import com.csme.csmeapi.fin.models.XDashboardAnalyticsRequest;
import com.csme.csmeapi.fin.models.XDashboardAnalyticsResponse;
import com.csme.csmeapi.fin.models.XModuleAnalyticsRequest;
import com.csme.csmeapi.fin.models.XModuleAnalyticsResponse;
import com.csme.csmeapi.fin.models.XBeneficiaryAnalyticsRequest;
import com.csme.csmeapi.fin.models.XBeneficiaryAnalyticsResponse;
import java.util.UUID;
import com.fasterxml.jackson.databind.ObjectMapper;
import io.swagger.annotations.*;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2024-01-21T18:21:27.250+04:00[Asia/Muscat]")
@Validated
@Api(value = "DashboardAnalytics", description = "Dashboard Analytics API")
public interface DashboardAnalyticsApi {

    @ApiOperation(value = "Get comprehensive dashboard analytics", nickname = "getDashboardAnalytics", notes = "Returns yearly and monthly statistics for all modules based on user access", response = Object.class, tags={ "Dashboard Analytics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Dashboard analytics retrieved successfully", response = Object.class),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/dashboardAnalytics",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Object> getDashboardAnalytics(@Pattern(regexp="[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}") @ApiParam(value = "Request Id (UUID format)" ,required=true) @RequestHeader(value="requestId", required=true) String requestId,@ApiParam(value = "Secret Key") @RequestHeader(value="SecertKey", required=false) String secertKey,@ApiParam(value = "Channel Name" ,required=true, defaultValue="FinMobileBankingApp") @RequestHeader(value="channel", required=true) String channel,@NotNull @ApiParam(value = "Time date Unix Format" ,required=true) @RequestHeader(value="timeStamp", required=true) Integer timeStamp,@ApiParam(value = "Version of API" , defaultValue="1.0.0") @RequestHeader(value="version", required=false) String version,@ApiParam(value = "Dashboard analytics request" ,required=true )  @Valid @RequestBody XDashboardAnalyticsRequest body);

    @ApiOperation(value = "Get module-specific analytics", nickname = "getModuleAnalytics", notes = "Returns analytics for a specific module with filtering by number of months", response = Object.class, tags={ "Dashboard Analytics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Module analytics retrieved successfully", response = Object.class),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/moduleAnalytics",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Object> getModuleAnalytics(@Pattern(regexp="[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}") @ApiParam(value = "Request Id (UUID format)" ,required=true) @RequestHeader(value="requestId", required=true) String requestId,@ApiParam(value = "Secret Key") @RequestHeader(value="SecertKey", required=false) String secertKey,@ApiParam(value = "Channel Name" ,required=true, defaultValue="FinMobileBankingApp") @RequestHeader(value="channel", required=true) String channel,@NotNull @ApiParam(value = "Time date Unix Format" ,required=true) @RequestHeader(value="timeStamp", required=true) Integer timeStamp,@ApiParam(value = "Version of API" , defaultValue="1.0.0") @RequestHeader(value="version", required=false) String version,@ApiParam(value = "Module analytics request" ,required=true )  @Valid @RequestBody XModuleAnalyticsRequest body);

    @ApiOperation(value = "Get beneficiary analytics", nickname = "getBeneficiaryAnalytics", notes = "Returns top beneficiaries by transaction count with detailed statistics", response = Object.class, tags={ "Dashboard Analytics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Beneficiary analytics retrieved successfully", response = Object.class),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/beneficiaryAnalytics",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Object> getBeneficiaryAnalytics(@Pattern(regexp="[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}") @ApiParam(value = "Request Id (UUID format)" ,required=true) @RequestHeader(value="requestId", required=true) String requestId,@ApiParam(value = "Secret Key") @RequestHeader(value="SecertKey", required=false) String secertKey,@ApiParam(value = "Channel Name" ,required=true, defaultValue="FinMobileBankingApp") @RequestHeader(value="channel", required=true) String channel,@NotNull @ApiParam(value = "Time date Unix Format" ,required=true) @RequestHeader(value="timeStamp", required=true) Integer timeStamp,@ApiParam(value = "Version of API" , defaultValue="1.0.0") @RequestHeader(value="version", required=false) String version,@ApiParam(value = "Beneficiary analytics request" ,required=true )  @Valid @RequestBody XBeneficiaryAnalyticsRequest body);

    @ApiOperation(value = "Get performance summary", nickname = "getPerformanceSummary", notes = "Returns key performance metrics and trends summary", response = Object.class, tags={ "Dashboard Analytics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Performance summary retrieved successfully", response = Object.class),
        @ApiResponse(code = 400, message = "Bad Request"),
        @ApiResponse(code = 500, message = "Internal Server Error") })
    @RequestMapping(value = "/performanceSummary",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Object> getPerformanceSummary(@Pattern(regexp="[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}") @ApiParam(value = "Request Id (UUID format)" ,required=true) @RequestHeader(value="requestId", required=true) String requestId,@ApiParam(value = "Secret Key") @RequestHeader(value="SecertKey", required=false) String secertKey,@ApiParam(value = "Channel Name" ,required=true, defaultValue="FinMobileBankingApp") @RequestHeader(value="channel", required=true) String channel,@NotNull @ApiParam(value = "Time date Unix Format" ,required=true) @RequestHeader(value="timeStamp", required=true) Integer timeStamp,@ApiParam(value = "Version of API" , defaultValue="1.0.0") @RequestHeader(value="version", required=false) String version,@ApiParam(value = "Performance summary request" ,required=true )  @Valid @RequestBody XDashboardAnalyticsRequest body);

}